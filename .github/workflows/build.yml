name: Build shinylive

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      # =====================================================
      # Clone submodules
      # =====================================================

      - name: Check out submodules
        run: |
          make submodules

      # =====================================================
      # Build
      # =====================================================
      # - uses: quarto-dev/quarto-actions/setup@v2

      - name: Build shinylive
        run: |
          make all

      # =====================================================
      # Upload shinylive bundle on release
      # =====================================================

      # Ensure that if the version in package.json is "0.0.5", then release tag
      # is "v0.0.5".
      - name: Check that version number matches release tag
        if: github.event_name == 'release'
        run: |
          if [ "${{github.ref}}" != v`node -p "require('./package.json').version"` ]; then
            echo Version in package.json, prepended with \"v\", is \"v`node -p "require('./package.json').version"`\", which does not match git tag \"${{github.ref}}\".
            exit 1
          fi

      - name: Build shinylive deployment bundle for release
        if: github.event_name == 'release'
        run: |
          make dist

      - name: Upload shinylive bundle to release
        if: github.event_name == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: "dist/*.tar.gz"
          tag: ${{ github.ref }}
          file_glob: true
          overwrite: true

      # =====================================================
      # Commit to gh-pages branch
      # =====================================================
      # Name and email are needed to push.
      - name: Configure git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Push to gh-pages branch
        if: github.ref == 'refs/heads/main'
        shell: bash
        run: |
          export SHA_SHORT=$(git rev-parse --short HEAD)
          git checkout -B gh-pages
          # Copy site/ to docs/, and turn symlinks into actual files/dirs.
          cp -LR site docs
          touch docs/.nojekyll
          git add docs
          git commit -m"Build docs/ for $SHA_SHORT"

          git log -n 4 --pretty=oneline --simplify-by-decoration

          git push -f origin gh-pages:gh-pages
